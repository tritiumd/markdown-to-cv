services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - markdown_db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - backend

  redis:
    image: redis:7.4.0
    networks:
      - backend

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/src
      - $DATA_FOLDER_PATH_DOCKER:/data
      - $DATA_FOLDER_PATH_ENGINE:/engine
    environment:
      - BACKEND_CORS_ORIGINS=["*"]
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env.docker
    networks:
      - backend
    user: ${CURRENT_UID:?"Please run as follows 'CURRENT_UID=$(id -u):$(id -g) docker-compose up'"}
    working_dir: "/src"
    # command: ["fastapi", "dev", "--host", "0.0.0.0"]
    command: ["./script/start-api.sh"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker.yaml
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DATA_FOLDER_PATH_DEPLOY:/engine/deploy
      - DATA_FOLDER_PATH_MARKDOWN:/data/markdown
      - DATA_FOLDER_PATH_HTML:/data/html
      - DATA_FOLDER_PATH_YAML:/data/yaml
      - REDIS_HOST=redis
    volumes:
      - ./worker:/worker
      - $DATA_FOLDER_PATH_ENGINE:/engine
      - $DATA_FOLDER_PATH_DOCKER:/data
    depends_on:
      - db
      - redis
    env_file:
      - .env.docker
    networks:
      - backend
    user: "${UID}:${GID}"
    command: ["./start-worker.sh"]


volumes:
  markdown_db:

networks:
  backend: